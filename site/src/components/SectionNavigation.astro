---
interface Props {
  numberOfSections: number;
}

const { numberOfSections } = Astro.props;
---

{/* SectionNavigation logic */}
<script>
  import type { SectionChangeEvent } from '../scripts/sectionVisibilityObserver';
  import { sectionVisibilityObserver } from '../scripts/sectionVisibilityObserver';

  const sections = document.querySelectorAll('section');
  const sectionIndicators: NodeListOf<HTMLButtonElement> = document.querySelectorAll('.section-indicator');

  const sectionIndicatorMappings = new Map<HTMLElement, HTMLElement>();

  let currentSectionIndicator = sectionIndicators[0];

  function sectionVisibilityChangeHandler({ detail }: SectionChangeEvent) {
    const { newSection } = detail;

    if (newSection.isSameNode(currentSectionIndicator)) {
      return;
    }

    currentSectionIndicator.classList.remove('bg-gray-500');
    currentSectionIndicator.classList.add('bg-transparent');

    currentSectionIndicator = sectionIndicatorMappings.get(newSection) as HTMLButtonElement;

    currentSectionIndicator.classList.remove('bg-transparent');
    currentSectionIndicator.classList.add('bg-gray-500');
  }

  function sectionIndicatorClickHandler({ target }: MouseEvent) {
    const targetSection = sectionIndicatorMappings.get(target as HTMLElement)!;

    targetSection.scrollIntoView({ behavior: 'smooth' });
  }

  sectionVisibilityObserver.addEventListener('change', sectionVisibilityChangeHandler);

  for (let i = 0; i < sections.length; i++) {
    // Set up a bidirectional mapping between sections and section indicators
    sectionIndicatorMappings.set(sections[i], sectionIndicators[i]);
    sectionIndicatorMappings.set(sectionIndicators[i], sections[i]);

    sectionIndicators[i].addEventListener('click', sectionIndicatorClickHandler);
  }
</script>

{
/* SectionNavigation content
Note: This component is not standalone and is context-dependent */
}
<div class="w-3 hidden flex-col justify-center gap-8 md:flex">
  {
    // The constructor creates a sparse array
    [...Array(numberOfSections)].map(() => (
      <button class="section-indicator transition duration-[.4s] size-3 rounded-full bg-transparent border-2 border-gray-500" />
    ))
  }
</div>
