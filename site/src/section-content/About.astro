---
import type { About } from 'common';

import { logError } from 'common';

import DynamicContentError from '../components/DynamicContentError.astro';

const { env } = Astro.locals.runtime;

const LANGUAGE_ICON_COLOR_DARKEN_THRESHOLD = 0.4;
const LANGUAGE_ICON_COLOR_DARKEN_PERCENTAGE = 50;

function fetchAboutErrorHandler(error: unknown) {
  logError('fetchAbout', error);
}

const about = (await env.DYNAMIC_CONTENT.get<About>('about', 'json').catch(
  fetchAboutErrorHandler
)) ?? { introduction: '', languages: [] };

const { introduction, languages } = about;

const languageRenderData = languages.map(
  ({ iconSlug, displayName, iconColor, iconColorBrightness }) => {
    return {
      displayName,
      shadowColor: `color-mix(in srgb, ${iconColor}, #000 ${(iconColorBrightness > LANGUAGE_ICON_COLOR_DARKEN_THRESHOLD ? LANGUAGE_ICON_COLOR_DARKEN_PERCENTAGE : 0) * iconColorBrightness}%)`,
      iconURL: `https://cdn.simpleicons.org/${iconSlug}/${iconColor.slice(1)}?viewbox=auto`,
    };
  }
);
---

<div class="h-full">
  <header class="mb-12">
    <p class="font-mono text-blue-300">02</p>
    <h1 class="text-2xl">About</h1>
  </header>
  {
    !!introduction && (
      <p class="max-w-prose text-justify mb-8">{introduction}</p>
    )
  }
  {!introduction && <DynamicContentError content-name="introduction" />}
  <h2 class="text-xl mb-6">Languages</h2>
  <div class="flex flex-wrap gap-8">
    {
      // This will not render anything if the languages array is empty
      // Therefore, no need to check for the length of the array
      languageRenderData.map(({ displayName, iconURL, shadowColor }) => {
        return (
          <div class="text-center">
            <img
              src={iconURL}
              alt={displayName}
              class="size-12 mx-auto mb-2 drop-shadow-slant-color-variable"
              style={`--shadow-color: ${shadowColor}`}
              loading="lazy"
            />
            <span>{displayName}</span>
          </div>
        );
      })
    }
    {
      languageRenderData.length === 0 && (
        <DynamicContentError content-name="languages" />
      )
    }
  </div>
</div>
