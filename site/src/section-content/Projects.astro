---
import type { ProjectDetails } from 'common';

import { logError } from 'common';

import Button from '../components/Button.astro';
import DynamicContentError from '../components/DynamicContentError.astro';
import DownArrow from '../assets/down-arrow.svg';

const { env } = Astro.locals.runtime;

// Remember to update the DEFAULT_RENDER_COUNT in the placeholder if this is changed
const DEFAULT_RENDER_COUNT = 3;

function fetchProjectsErrorHandler(error: unknown) {
  logError('fetchProjects', error);
}

// const projects = JSON.parse(
//   `[["bf-rust",{"description":"Brainf*** interpreter in Rust. What is this longer description","topics":["rust","intepreter"]}],["blog",{"description":"A personal blog about my personal development journey","topics":["astro","blog"]}],["cf-workers-utils",{"description":"An opinionated utility library for Cloudflare Workers","topics":[]}],["cityueegef-project",{"description":null,"topics":[]}],["counter",{"description":"A counter API for counting visitors, clicks or anything you want.","topics":[]}],["dailyimage",{"description":"Daily Image Generated by Stable Diffusion & Llama 2","topics":[]}],["game-of-life",{"description":"An implemenatation of the classical simulation Conway's Game of Life written in Rust. Comes with a front end written in vanilla typescript.","topics":["conways-game-of-life","game-of-life","rust","typescript","vite","wasm","web"]}],["Kynson",{"description":"Github Profile of Kynson","topics":[]}],["kynsonszetau.com",{"description":"Kynson Szetau personal website","topics":["porfolio","website"]}],["life-calendar",{"description":"Create your own life calendar!","topics":[]}],["lima-redis",{"description":"A customised Redis container image for Project Lima","topics":[]}],["lint",{"description":"Lint configurations used in Kynson Szetau's projects","topics":[]}],["lit",{"description":null,"topics":[]}],["multiarch-containers",{"description":"A playground repository for building multiarch containers","topics":[]}],["nixos-quadlet",{"description":"Manages Podman containers and networks on NixOS via Quadlet.","topics":[]}],["OnBoard",{"description":"PCB Name Card Supported by OnBoard","topics":[]}],["png2webp",{"description":"A simple library designed to convert PNG images to WebP format","topics":[]}],["sekreto-cli",{"description":"A CLI helps you to keep you file secret.","topics":[]}],["time",{"description":"A rainmeter mond style clock for macOS. Based on Mond by ApexXx-SenSei","topics":[]}],["Time-Crypt",{"description":"A timelock implementation.  Inspired by: https://github.com/drand/tlock (Not secure nor user-friendly, of cause, just a PoC.)","topics":[]}],["workers-lit",{"description":null,"topics":[]}]]`
// ) as [string, { description: string | null; topics: string[] }][];
const projects =
  (await env.DYNAMIC_CONTENT.get<[string, ProjectDetails][]>(
    'projects',
    'json'
  ).catch(fetchProjectsErrorHandler)) ?? [];
---

{/* Projects logics */}
<script>
  const showAllProjectsButton = document.querySelector(
    '#show-all-projects-button'
  );
  const hiddenProjectCards = document.querySelectorAll('.project-card.hidden');

  function showAllProjectsButtonClickHandler() {
    hiddenProjectCards.forEach((card) => {
      card.classList.remove('hidden');
    });

    showAllProjectsButton?.remove();
  }

  showAllProjectsButton?.addEventListener(
    'click',
    showAllProjectsButtonClickHandler
  );
</script>

{/* Projects content */}
<header class="mb-12">
  <p class="font-mono text-blue-300">03</p>
  <h1 class="text-2xl">Projects</h1>
</header>
<div class="grid grid-cols-[repeat(auto-fit,minmax(350px,1fr))] gap-5 mb-8">
  {
    projects.map(([name, { description, topics }], i) => {
      return (
        <div
          class="project-card rounded-lg border border-gray-700 p-5"
          class:list={{ hidden: i >= DEFAULT_RENDER_COUNT }}
        >
          <a
            class="text-xl mb-3 underline underline-offset-4 decoration-blue-300 inline-block"
            href={`https://github.com/Kynson/${name}`}
          >
            {name}
          </a>
          <p class="mb-5">{description}</p>
          <div class="flex flex-wrap gap-2">
            {topics?.map((topic) => {
              return <span class="text-blue-300/80">#{topic}</span>;
            })}
          </div>
        </div>
      );
    })
  }
</div>
{
  projects.length > DEFAULT_RENDER_COUNT && (
    <Button
      id="show-all-projects-button"
      class="!block mx-auto w-fit bg-transparent !text-blue-50 transition-[background-color] hover:bg-blue-300/25 focus-within:bg-blue-300/25"
    >
      <span class="inline-flex justify-between w-ful">
        <span>Show All</span>
        <DownArrow class="size-4 ml-1 my-auto" />
      </span>
    </Button>
  )
}
{projects.length === 0 && <DynamicContentError content-name="projects" />}
